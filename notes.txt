1. Нужно учесть что у одного логина может быть разные учетные записи
в телеге, юзер может сменить номер и телегу. Т.е. у логин 
может смениться чат айди


2. Разобраться с 
Для достижения вашей цели, вам нужно использовать операцию REPLACE INTO вместо INSERT INTO. Операция REPLACE INTO вставляет новую запись, если уникальный ключ не существует, и обновляет существующую запись, если уникальный ключ уже существует.
Вот пример запроса:
sql

Copy

REPLACE INTO tg_bot (id, login, chat_id, authorized)
VALUES (1, 'vynny1ap64_h7n2', 676900138, 1);
В этом примере, если запись с id равным 1 уже существует, то поля login, chat_id и authorized будут обновлены новыми значениями. Если же записи с id равным 1 нет, то будет выполнена вставка новой записи с указанными значениями.
Обратите внимание, что вам нужно заменить tg_bot на имя вашей таблицы в запросе.

3. Логотип перед стартом бота и потом в приветствии


vynny1ap64_h7n2
ydbhix3h













  // bot.on("message", async (ctx, next) => {
  //   const chatID = ctx.chat.id;
  //   ctx.reply("ID чата: " + chatID);
  //   next();
  // });

  // // bot.hears("привет", (ctx) => ctx.reply("та написав привет"));
  // // bot.hears("1", (ctx) => ctx.reply("та написав один"));
  // // bot.hears("рок", (ctx) => ctx.reply("рок-н-рол"));

  // const getCoinSide = () => (getRandomInt(0, 1) === 0 ? "Орёл" : "Решка");

  // const coinInlineKeyboard = Markup.inlineKeyboard([
  //   Markup.button.callback("Подбросить ещё раз", "flip_a_coin"),
  //   Markup.button.callback("Еще кнлпочка", "1"),
  // ]);

  // bot.hears("Авторизація", (ctx) => ctx.reply(getCoinSide(), coinInlineKeyboard));

  // //Подбросить ещё раз
  // bot.action("flip_a_coin", async (ctx) => {
  //   await ctx.editMessageText(
  //     `${getCoinSide()}\nОтредактировано: ${new Date().toISOString()}`,
  //     coinInlineKeyboard
  //   );
  // });


  
//bot.on("message") — он запускается каждый раз, когда кто-то отправляет сообщение.


// //hears — регистрирует middleware, которые реагируют на текстовые сообщения указанного содержания
  // bot.hears("Авторизація", (ctx) => {
  //   ctx.reply("Введіть логін:");
  // });


    // bot.action(["yes", "no"], (ctx) => {
  //   if (ctx.callbackQuery.data === "yes") {
  //     addTask(ctx.session.taskText);
  //     ctx.editMessageText("Ваша задача успешно добавлена");
  //   } else {
  //     ctx.deleteMessage();
  //   }
  // });

  // //Через ctx.reply мы отвечаем в тот же чат, а через ctx.telegram.sendMessage(chat_id, `Hello`) можно отправить сообщение в произвольный чат.

//git add . && git commit -m "add getUserCredit, keyboard refactoring" && git push
