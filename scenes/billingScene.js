const { Scenes } = require("telegraf");
const { mainKeyboard } = require("../keyboards");
const { getUserAllInfo } = require("../controllers/getUserAllInfo");
const { getUserBalance } = require("../controllers/getUserBalance");
const { getUserPays } = require("../controllers/getUserPays");

const billingScene = new Scenes.BaseScene("billingScene");

billingScene.enter(async (ctx) => {
  //–≤—Ö—ñ–¥ –≤ —Å—Ü–µ–Ω—É
  //–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –π–æ–≥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
  await ctx.replyWithHTML("–í—ñ—Ç–∞—î–º–æ –≤ –±–æ—Ç—ñ <b>MEGABOT</b>\n\n" + "–í–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!");

  await ctx.replyWithHTML(await getUserAllInfo(ctx.session.login));

  await ctx.replyWithHTML("‚ùóÔ∏è<b>–£–í–ê–ì–ê! –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –ø—Ä–∞—Ü—é—î –≤ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ</b>‚ùóÔ∏è");

  await ctx.reply("üëá –í–∏–∫–æ–Ω–∞–π—Ç–µ –∑–∞–ø–∏—Ç:", mainKeyboard());
});

//–≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
billingScene.hears("üí∞–ë–∞–ª–∞–Ω—Å", async (ctx) => {
  login = ctx.session.login;
  ctx.replyWithHTML(`–í–∞—à –±–∞–ª–∞–Ω—Å: <b>${await getUserBalance(login)} –≥—Ä–Ω.</b>`);
});

//–≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 10 –ø–ª–∞—Ç–µ–∂—ñ–≤
billingScene.hears("üìà–û—Å—Ç–∞–Ω–Ω—ñ –ø–ª–∞—Ç–µ–∂—ñ", async (ctx) => {
  login = ctx.session.login;
  const pays = await getUserPays(login);
  let paysMarkup = "";

  for (let i = 0; i < Math.min(10, pays.length); i++) {
    if (pays[i].date) {
      const date = new Date(pays[i].date);
      const formattedDate = date.toLocaleString("uk-UA", { timeZone: "Europe/Kiev" });
      paysMarkup += `–î–∞—Ç–∞: <i>${formattedDate}</i>\n–°—É–º–∞: <b>${pays[i].summ} –≥—Ä–Ω.</b>\n\n`;
    }
  }

  ctx.replyWithHTML(`<b>–û—Å—Ç–∞–Ω–Ω—ñ 10 –ø–ª–∞—Ç–µ–∂—ñ–≤:</b>\n\n${paysMarkup}`);
});

//–≤–∑—è—Ç–∏ –∫—Ä–µ–¥–∏—Ç
billingScene.hears("ü§ë–ö—Ä–µ–¥–∏—Ç", async (ctx) => {
  login = ctx.session.login;
  ctx.replyWithHTML(`–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç–∏ –∫—Ä–µ–¥–∏—Ç.`);
});


//–≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
billingScene.hears("üìã–ö–æ–Ω—Ç–∞–∫—Ç–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞", async (ctx) => {
  ctx.replyWithHTML(`<b>üè¢ –ù–ê–®–ê –ê–î–†–ï–°–ê:</b>
–º. –ö–∞–ª—É—à, –≤—É–ª. –ë.–•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ, 14\n
<b>üì± –¢–ï–õ–ï–§–û–ù–ò:</b>
(099) 565-44-48
(098) 565-44-48
(093) 565-44-48\n
<b>üìß –ï–õ–ï–ö–¢–†–û–ù–ù–ê –ü–û–®–¢–ê:</b>
manager@itlux.if.ua\n
<b>üïó –ì–†–ê–§–Ü–ö –†–û–ë–û–¢–ò</b>:
–ü–Ω-–ß—Ç –∑ 8:30 –¥–æ 18:00
–ü—Ç –∑ 8:30 –¥–æ 17:00
–°–± 9:00 –¥–æ 16:00
–ù–¥ –í–∏—Ö—ñ–¥–Ω–∏–π
`);
});

//—Å–∫–∞—Ä–≥–∞
billingScene.hears("ü§¨–ü–æ–¥–∞—Ç–∏ —Å–∫–∞—Ä–≥—É", async (ctx) => {
  ctx.replyWithHTML(
    `–í–∏ —Ç–∞–º —Å–æ–±—ñ –Ω–µ –≤–∏–¥—É–º—É–π—Ç–µ, –≤—Å–µ —É –≤–∞—Å –¥–æ–±—Ä–µ —ñ —Å–∫–∞—Ä–∂–∏—Ç–∏—Å—å –≤–∞–º –Ω—ñ –Ω–∞ —à–æ. –•–∞–π —â–∞—Å—Ç–∏—Ç—å!`
  );
});

//—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∞–±–æ–Ω–µ–Ω—Ç–∞
billingScene.hears("ü§∑‚Äç‚ôÇÔ∏è–•—Ç–æ —è?", async (ctx) => {
  await ctx.replyWithHTML(await getUserAllInfo(ctx.session.login));
});

module.exports = { billingScene };
